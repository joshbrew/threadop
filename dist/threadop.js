(()=>{var U=Object.defineProperty;var B=(d,g)=>{for(var m in g)U(d,m,{get:g[m],enumerable:!0})};var W={};B(W,{default:()=>x,threadop:()=>M});function M(d=k=>k,{imports:g,message:m,transfer:E,port:f,blocking:u,pool:C}={}){return new Promise((k,S)=>{let j=(()=>{let b=(r,s)=>{if(globalThis.SENDERS)for(let a in globalThis.SENDERS){if(globalThis.BLOCKING[a]){if(globalThis.BLOCKED[a]){console.error("Thread Blocked: "+a);continue}globalThis.BLOCKED[a]=!0}globalThis.SENDERS[a].postMessage({message:r,cb:s})}else postMessage({message:r,cb:s})},t=(r,s)=>{let a=(()=>{})(r.data?.message);a?.then?a.then(l=>{s&&s.postMessage(!0),b(l,r.data.cb)}):(s&&s.postMessage(!0),b(a,r.data.cb)),r.data.oneOff&&globalThis.SENDERS&&postMessage(!0)};globalThis.onmessage=r=>{if(r.data?.RECEIVER){let s=r.data.blocking;globalThis.RECEIVERS||(globalThis.RTCR=0,globalThis.RECEIVERS={});let a=r.data.id;globalThis.RECEIVERS[a]=r.data.RECEIVER,globalThis.RTCR++,r.data.RECEIVER.onmessage=l=>{t(l,s?r.data.RECEIVER:void 0)},r.data.RECEIVER.onerror=l=>{delete globalThis.RECEIVER[a]}}else if(r.data?.SENDER){globalThis.SENDERS||(globalThis.PCTR=0,globalThis.SENDERS={},globalThis.BLOCKING={},globalThis.BLOCKED={});let s=r.data.blocking,a=r.data.id?r.data.id:globalThis.PCTR;globalThis.SENDERS[a]=r.data.SENDER,globalThis.PCTR++,s&&(globalThis.BLOCKING[a]=!0),r.data.SENDER.onmessage=l=>{globalThis.BLOCKING[a]&&(globalThis.BLOCKED[a]=!1)},r.data.SENDER.onerror=l=>{delete globalThis.SENDERS[a]}}else r.data?.DELETED?(delete globalThis.RECEIVERS?.[r.data.DELETED],delete globalThis.SENDERS?.[r.data.DELETED]):t(r)},globalThis.onerror=r=>{console.error(r)}}).toString().replace("()=>{}",d.toString()),N=`${$(g)}
(${j})()`,w=new Blob([N],{type:"application/javascript"}),T=URL.createObjectURL(w);if(C){let r=function(){let a=new Worker(T,g?{type:"module"}:void 0),l=Math.random();return a.id=l,b[l]=a,l},b={},t={};for(let a=0;a<C;a++)r();let s=Object.keys(b);if(f&&s.forEach((a,l)=>{let n=b[a];Array.isArray(f)?P(n,f[l],n.id,u):P(n,f,n.id,u)}),m)Promise.all(s.map((a,l)=>{let n=b[a],e=Array.isArray(m)?m[l]:m;return new Promise((o,i)=>{n.onmessage=p=>{Promise.resolve().then(()=>{n.terminate(),delete b[n.id]}),o(p.data.message)},n.onerror=p=>{Promise.resolve().then(()=>{n.terminate(),delete b[n.id]}),i(new Error("Worker encountered an error: "+p.message))},n.postMessage({message:e,oneOff:!0},E)})})).then(a=>{URL.revokeObjectURL(T),k(a)}).catch(a=>{URL.revokeObjectURL(T),Object.keys(b).map((l,n)=>{let e=b[l];e&&e.terminate(),delete b[l],delete t.helpers?.[l]}),S(a)});else{let a={},l=0;Object.assign(t,{workers:b,helpers:{},keys:s,run:(e,o,i)=>{if(i)t.helpers[i]?.run(e,o);else if(Array.isArray(e)){let p=e.length;for(let h=0;h<p;h++)t.helpers[s[l]].run(e[h],o[h]),l++,l>=s.length&&(l=0)}else t.helpers[s[l]].run(e,o),l++,l>=s.length&&(l=0)},terminate:e=>{function o(i){t.helpers[i]?.terminate(),delete t.helpers[i],delete t.workers[i]}e?o(e):s.forEach(o)},addWorker:()=>{let e=r(),o=b[e];return n(o),s.length=0,s.push(...s),e},addPort:(e,o)=>{function i(p){return t.helpers[p]?.addPort(e),!0}return o?i(o):s.map(i)},addCallback:(e,o,i)=>{function p(h){return t.helpers[h]?.addCallback(e,o)}return i?p(i):s.map(p)},removeCallback:(e,o)=>{function i(p){return t.helpers[p]?.removeCallback(e),!0}return o?i(o):s.map(i)},callbacks:a});let n=e=>{let o=!1,i={};e.onmessage=c=>{for(let y in i)i[y](c.data.message,c.data.cb)},e.onerror=c=>{console.error(new Error("Worker encountered an error: "+c.message))};let p=(c,y)=>new Promise((R,I)=>{if(e.PORTS)e.postMessage({message:c},y),R(!0);else{if(u){if(o)return new Promise((L,D)=>{D("Thread Blocked")});o=!0}let O=Math.random();i[O]=(L,D)=>{O===D&&(delete i[O],u&&(o=!1),R(L))},e.postMessage({message:c,cb:O},y)}}),h={run:(c,y)=>p(c,y),terminate:()=>{if(URL.revokeObjectURL(T),e.terminate(),delete b[e.id],delete t.helpers[e.id],e.PORTS){let c=(y,R)=>{y.postMessage({DELETED:e.id})};e.PORTS.forEach(c)}},addPort:c=>P(e,c,e.id,u),addCallback:(c=R=>{},y)=>{let R=Math.random();return h.callbacks[R]=y?I=>{c(I),delete h.callbacks[R]}:c,R},removeCallback:c=>{delete h.callbacks[c]},worker:e,callbacks:i};t.helpers[e.id]=h};Object.keys(b).forEach((e,o)=>{n(b[e])}),k(t)}}else{let b=Math.random(),t=new Worker(T,g?{type:"module"}:void 0);if(f&&(Array.isArray(f)?f.map(r=>{P(t,r,b,u)}):P(t,f,b,u)),m)t.onmessage=r=>{Promise.resolve().then(()=>{t.terminate(),URL.revokeObjectURL(T)}),k(r.data.message)},t.onerror=r=>{Promise.resolve().then(()=>{t.terminate(),URL.revokeObjectURL(T)}),S(new Error("Worker encountered an error: "+r.message))},t.postMessage({message:m,oneOff:!0},E);else{let r={},s=!1;t.onmessage=n=>{for(let e in r)r[e](n.data.message,n.data.cb)},t.onerror=n=>{console.error(new Error("Worker encountered an error: "+n.message))};let a=(n,e)=>new Promise((o,i)=>{if(t.PORTS)t.postMessage({message:n},e),o(!0);else{if(u){if(s)return new Promise((h,c)=>{c("Thread Blocked")});s=!0}let p=Math.random();r[p]=(h,c)=>{p===c&&(delete r[p],u&&(s=!1),o(h))},t.postMessage({message:n,cb:p},e)}}),l={run:(n,e)=>a(n,e),terminate:()=>{if(URL.revokeObjectURL(T),t.terminate(),t.PORTS){let n=(e,o)=>{e.postMessage({DELETED:b})};t.PORTS.forEach(n)}},addPort:n=>P(t,n,b,u),addCallback:(n=o=>{},e)=>{let o=Math.random();return r[o]=e?i=>{n(i),delete r[o]}:n,o},removeCallback:n=>{delete l.callbacks[n]},worker:t,callbacks:r};k(l)}}})}function $(d){let g=location.pathname.split("/");g.pop();let m=location.origin+g.join("/")+"/";return typeof d=="string"?(d.startsWith("./")&&(d=m+d),d.includes("import")?`${d}`:`import '${d}';`):Array.isArray(d)?d.map(E=>(E.startsWith("./")&&(E=m+E),E.includes("import")?E:`import '${E}';`)).join(`
`):typeof d=="object"?Object.entries(d).map(([f,u])=>(f.startsWith("./")&&(f=m+f),typeof u=="string"?`import ${u} from '${f}';`:typeof u=="boolean"&&u?`import '${f}'`:`import { ${Object.entries(u).map(([k,S])=>typeof S=="string"?`${k} as ${S}`:k).join(", ")} } from '${f}';`)).join(`
`)+"":""}function P(d,g,m,E){let f=new MessageChannel;d.postMessage({SENDER:f.port1,id:m,blocking:E},[f.port1]),g.postMessage({RECEIVER:f.port2,id:m,blocking:E},[f.port2]),d.PORTS||(d.PORTS=[]),d.PORTS.push(g),g.PORTS||(g.PORTS=[]),g.PORTS.push(d)}var x=M;["threadop"].forEach(d=>{W[d]&&(globalThis[d]=W[d])});})();
